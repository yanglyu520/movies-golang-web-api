definitions:
  data.Movie:
    properties:
      genres:
        items:
          type: string
        type: array
      id:
        type: integer
      runtime:
        example: "0"
        type: string
      title:
        type: string
      version:
        type: integer
      year:
        type: integer
    type: object
  data.MovieList:
    properties:
      movies:
        items:
          $ref: '#/definitions/data.Movie'
        type: array
    type: object
  main.envStruct:
    properties:
      built_sha:
        type: string
      status:
        type: string
      system_info:
        $ref: '#/definitions/main.systemInfo'
    type: object
  main.envWithEnvelop:
    properties:
      env:
        $ref: '#/definitions/main.envStruct'
    type: object
  main.systemInfo:
    properties:
      env:
        type: string
      version:
        type: string
    type: object
info:
  contact:
    email: yang.lyu@hotmail.com
    name: API Support
    url: https://github.com/yanglyu520
  description: This is a Movies Web API.
  termsOfService: http://swagger.io/terms/
  title: Movies Web API
  version: "1.0"
paths:
  /v1/healthcheck:
    get:
      description: |-
        Returns a healthcheck response including the Git SHA that was
        used to build the current binary. This does not use the HASH env
        variable but rather the binary debug symbols.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.envWithEnvelop'
        "500":
          description: Internal Server Error
          schema: {}
      summary: Healthcheck
      tags:
      - healthcheck
  /v1/movies:
    get:
      description: Get a list of movies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/data.MovieList'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get a list of movies
      tags:
      - movies
    post:
      consumes:
      - application/json
      description: Create a new movie
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/data.Movie'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create a new movie
      tags:
      - movies
  /v1/movies/id:
    delete:
      description: Delete a specific movie
      parameters:
      - description: movie ID
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/data.Movie'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Delete a specific movie
      tags:
      - movies
    get:
      description: Get  a specific movie
      parameters:
      - description: movie ID
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/data.Movie'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get a specific movie
      tags:
      - movies
    put:
      description: Update a specific movie
      parameters:
      - description: movie ID
        in: path
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/data.Movie'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Update a specific movie
      tags:
      - movies
swagger: "2.0"
